class GFG
{
    static void rotate(int matrix[][]) 
    {
        int n = matrix.length;
        for(int i = 0; i<n/2; i++){
            for(int j = i; j<n-i-1; j++){
                int temp = matrix[i][j];
                matrix[i][j] = matrix[j][n-i-1];
                matrix[j][n-i-1] = matrix[n-i-1][n-j-1];
                matrix[n-i-1][n-j-1] = matrix[n-j-1][i];
                matrix[n-j-1][i] = temp;
            }
        }
    }
}
____________________________________________________________________
class Solution
{
    //Function to rotate matrix anticlockwise by 90 degrees.
    static void rotateby90(int a[][], int n) 
    { 
        for(int layer = 0; layer<n/2; layer++){
            for(int i = layer; i<n-layer-1; i++){
                int temp = a[layer][i];
                a[layer][i] = a[i][n-layer-1];
                a[i][n-layer-1] = a[n-layer-1][n-i-1];
                a[n-layer-1][n-i-1] = a[n-i-1][layer];
                a[n-i-1][layer] = temp;
            }
        }
    }
}