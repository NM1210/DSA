class Pair
{
    int x;
    int y;
    
    public Pair(int a, int b)
    {
        x = a;
        y = b;
    }
}

class Chainlength
{
    public static void main (String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        
        while(t-- > 0)
        {
            int n = sc.nextInt();
            Pair pr[] = new Pair[n];
            int arr[] = new int[2*n];
            for(int i = 0; i < 2*n; i++)
            {
               arr[i] = sc.nextInt();
            }
            for(int i = 0, j = 0; i < 2*n-1 && j < n; i = i+2, j++)
            {
                pr[j] = new Pair(arr[i], arr[i+1]);
            }
            GfG g = new GfG();
            System.out.println(g.maxChainLength(pr, n));
        }
    }
}
// } Driver Code Ends


class CompareBySecond implements Comparator<Pair>
{
  public int compare(Pair a, Pair b)
    {
        return a.y - b.y;
    }
}

class GfG
{
    int maxChainLength(Pair a[], int n)
    {
        Arrays.sort(a, new CompareBySecond());
    //   for(int i = 0; i<n; i++){
    //       System.out.print(a[i].x+","+a[i].y+" ");
    //   }
        int dp[] = new int[n];
        Arrays.fill(dp, 1);
        for(int i = 0; i<n-1; i++){
            for(int j = 0; j<n; j++){
                if(a[i].y<a[j].x){
                    if(dp[i]+1>dp[j]){
                        dp[j] = dp[i]+1;
                    }
                }
            }
        }
        // for(int i = 0; i<n; i++){
        //     System.out.print(dp[i]);
        // }
        int max = 0;
        for(int i = 0; i<n; i++){
            if(dp[i]>max) max = dp[i];
        }
        return max;
    }
}