O(N):-

class Compute {
    public String isSubset( long a1[], long a2[], long n, long m) {
        HashSet<Long> set = new HashSet<>();
        for(int i = 0; i<n; i++){
            set.add(a1[i]);
        }
        for(int i = 0; i<m; i++){
            if(!set.contains(a2[i])) return "No";
        }
        return "Yes";
    }
}
_______________________________________________________________________________
O(N^2):-

public class Q29 {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int n, m;
        n = input.nextInt();
        m = input.nextInt();
        int a[] = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = input.nextInt();
        }
        int b[] = new int[m];
        for (int i = 0; i < m; i++) {
            b[i] = input.nextInt();
        }
        int f = 0;
        for (int i = 0; i < m; i++){
            f = 0;
            for (int j = 0; j < n; j++){
                if (a[i] == a[j]){
                    f = 1;
                }
            }
        }
        if (f == 1){
            System.out.println(true);
        }
    }
}
