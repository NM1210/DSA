	if(n==0 || n==1)
            return n;
        else{
            long sum = 0;
            for(int i = 0; i<a.length; i++){
                sum = sum + a[i];
            }
            if(sum>x)
                if(a.length<=n)
                    n = a.length;
                
            long[]  a1 = new long[a.length-1];
            for(int i = 0; i<a.length-1; i++){
                a1[i] = a[i];
            }
        
            long[]  a2 = new long[a.length-1];
            for(int i = 0; i<a.length-1; i++){
                a2[i] = a[i+1];
            }
        
            return Math.min(sb(a1,n,x),sb(a2,n,x));
	}
______________________________________________________________

class Compute {

    public static long sb(long a[], long n, long x) {
        long len = Long.MAX_VALUE;
        long sum = 0;
        Queue<Long> q = new LinkedList<>();
        for(int i = 0; i<n; i++){
            sum = sum + a[i];
            q.add(a[i]);
            while(sum>x){
                if(q.size()<len){
                    len = q.size();
                }
                sum = sum - q.remove();
            }
        }
        return len;
    }
}