class Solution{
    static int minJumps(int[] a){
        int n = a.length;
        int dp[] = new int[n];
        ArrayList<Integer> q = new ArrayList<>();
        q.add(-1);
        for(int i = n-1; i>=0; i--){
            if(i+a[i]>=n-1){
                if(i==n-1) dp[i] = 0;
                else dp[i] = 1;
                if(q.size()==1) q.add(i);
                else q.set(1, i);
            }
            else{
                if(a[i]==0) dp[i] = -1;
                else{
                    int j = 1;
                    while(j<q.size()&&q.get(j)>i+a[i]){
                        j++;
                    }
                    if(j<q.size()) dp[i] = dp[q.get(j)] + 1;
                    else dp[i] = -1;
                    // if(q.size()-1>=dp[i]) q.set(dp[i], i);
                    // else q.add(i);
                    if(dp[i]!=-1){
                        int size = q.size()-1;
                        while(size<dp[i]){
                            q.add(-1);
                            size++;
                        }
                        q.set(dp[i], i);
                    }
                }
            }
        }
        // for(int i = 0; i<n; i++){
        //     System.out.print(dp[i]+" ");
        // }
        return dp[0];
    }
}