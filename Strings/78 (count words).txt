public class Q2829 {
    public static void main(String[] args) {
        String[] grid = {"abcdefg",
                         "ageeksb",
                         "ceeefgd",
                         "heiejkl",
                         "mknokpq",
                         "rstuvsw",
                         "tuvwxyz"};
        int flag = 0;
        String s = "geeks";

        for (int i = 0; i < grid.length; i++){
            for (int j = 0; j < grid[i].length(); j++){
                if (right(grid, i, j, s, 0)){  // || bottom(grid, i, j, s, 0) || diagonal(grid, i, j, s, 0)){

                    flag++;

//                    flag = 1;
//                    j = grid[i].length() - 1;
//                    i = grid.length - 1;
                }
                if (bottom(grid, i, j, s, 0)){
                    flag++;
                }
                if (diagonal(grid, i, j, s, 0)){
                    flag++;
                }
            }
        }

        if (flag != 0){
            if (flag == 1) System.out.println("present");
            else System.out.println("present " + flag + " times");
        }
        else System.out.println("absent");

//        for (int i = 0; i < grid.length; i++){
//            for (int j = 0; j < grid[i].length(); j++){
//                System.out.print(grid[i].charAt(j));
//            }
//            System.out.println();
    }
    static boolean right(String[] G, int i, int j, String str, int index){
        if (index == str.length()) return true;

        if (j < G[i].length() && G[i].charAt(j) == str.charAt(index)){
            return right(G, i, j+1, str, index+1);
        }

        else return false;
    }

    static boolean bottom(String[] G, int i, int j, String str, int index){
        if (index == str.length()) return true;

        if (i < G.length && G[i].charAt(j) == str.charAt(index)){
            return bottom(G, i+1, j, str, index+1);
        }

        else return false;
    }

    static boolean diagonal(String[] G, int i, int j, String str, int index){
        if (index == str.length()) return true;

        if (i < G.length && j < G[i].length() && G[i].charAt(j) == str.charAt(index)){
            return diagonal(G, i+1, j+1, str, index+1);
        }

        else return false;
    }
}
