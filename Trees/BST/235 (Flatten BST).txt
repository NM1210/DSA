/************************************************************
 Following is the TreeNode class structure
     class TreeNode<T>
     {
         public:
             T data;
             TreeNode<T> left;
             TreeNode<T> right;

            TreeNode(T data)
            {
                this.data = data;
                left = null;
                right = null;
         }
     };
 ************************************************************/
import java.util.*;
public class Solution
{
    static ArrayList<TreeNode> inorder;
    static void traverse(TreeNode root){
        if(root==null) return;
        traverse(root.left);
        inorder.add(root);
        traverse(root.right);
    }
    public static TreeNode<Integer> flatten(TreeNode<Integer> root)
    {
        inorder = new ArrayList<>();
        traverse(root);
        int n = inorder.size();
        for(int i = 0; i<n-1; i++){
            TreeNode node = inorder.get(i);
            node.left = null;
            TreeNode temp = inorder.get(i+1);
            node.right = temp;
        }
        TreeNode temp = inorder.get(n-1);
        temp.left = null;
        temp.right = null;
        root = inorder.get(0);
        return root;
    }
}